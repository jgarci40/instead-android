diff -Nur SDL_ttf-2.0.10/SDL_ttf.c SDL_ttf-2.0.10-cache/SDL_ttf.c
--- SDL_ttf-2.0.10/SDL_ttf.c	2009-10-19 12:18:05.000000000 +0400
+++ SDL_ttf-2.0.10-cache/SDL_ttf.c	2011-01-12 05:52:02.000000000 +0300
@@ -107,8 +107,7 @@
 
 	/* Cache for style-transformed glyphs */
 	c_glyph *current;
-	c_glyph cache[256];
-	c_glyph scratch;
+	c_glyph cache[257]; /* 257 is a prime */
 
 	/* We are responsible for closing the font stream */
 	SDL_RWops *src;
@@ -567,10 +566,6 @@
 		}
 
 	}
-	if( font->scratch.cached ) {
-		Flush_Glyph( &font->scratch );
-	}
-
 }
 
 static FT_Error Load_Glyph( TTF_Font* font, Uint16 ch, c_glyph* cached, int want )
@@ -890,15 +885,14 @@
 static FT_Error Find_Glyph( TTF_Font* font, Uint16 ch, int want )
 {
 	int retval = 0;
+	int hsize = sizeof( font->cache ) / sizeof( font->cache[0] );
+
+	int h = ch % hsize;
+	font->current = &font->cache[h];
+
+	if (font->current->cached != ch)
+		Flush_Glyph( font->current );
 
-	if( ch < 256 ) {
-		font->current = &font->cache[ch];
-	} else {
-		if ( font->scratch.cached != ch ) {
-			Flush_Glyph( &font->scratch );
-		}
-		font->current = &font->scratch;
-	}
 	if ( (font->current->stored & want) != want ) {
 		retval = Load_Glyph( font, ch, font->current, want );
 	}
